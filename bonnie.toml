version = "0.3.2"

[scripts]
dev.cmd = [
    "cd packages/tribble",
    "cargo run -- -c \"%example.yml\" %%"
]
dev.args = [ "example" ]
dev.desc = "runs the cli with the provided options (this will execute in the `examples/` directory on the provided config file)"

app.cmd = "concurrently --kill-others \"bonnie app export\" \"bonnie app build-tailwind\" \"bonnie app serve\""
app.desc = "runs `dev-old export` `app build-tailwind` and `app serve` simultaneously (needs `concurrently`)"
app.subcommands.build-tailwind.cmd = [
    "cd packages/tribble-app",
    "tailwindcss -i static/style.css -c tailwind.config.js -o static/tailwind.css --watch"
]
app.subcommands.build-tailwind.subcommands.--prod.cmd = [
    "cd packages/tribble-app",
    "NODE_ENV=production tailwindcss -i static/style.css -c tailwind.config.js -o static/tailwind.css --minify"
]

app.subcommands.export.cmd = [
    "cd packages/tribble-app",
    "find . -not -path \".perseus/*\" -not -path \"target/*\" | entr -s \"perseus export\""
]
app.subcommands.export.desc = "exports the site, watching for changes"
app.subcommands.serve.cmd = [
    "cd packages/tribble-app",
    "browser-sync start --server \".perseus/dist/exported\" --files .perseus/dist --no-open --port 8080 --extensions html"
]
app.subcommands.serve.desc = "serves the site's exported content"

prep-wasm.cmd = [
    "rm -rf packages/tribble/.tribble",
    "mkdir packages/tribble/.tribble",
    # Utility files that we'll move around when we need the,
    "mkdir packages/tribble/.tribble/utils",
    # Working directories for Perseus
    "mkdir packages/tribble/.tribble/perseus",
    "mkdir packages/tribble/.tribble/perseus/mutable",
    "cd packages/tribble-app/.perseus",
    "wasm-pack build --target web --release",
    "cd ../",
    # Copy in utilities (bundles and CSS)
    "cp .perseus/pkg/perseus_engine_bg.wasm ../tribble/.tribble/utils/bundle.wasm",
    "cp .perseus/pkg/perseus_engine.js ../tribble/.tribble/utils/bundle.js",
    "cp index.html ../tribble/.tribble/utils/index.html",
    "cp -r static/ ../tribble/.tribble/utils/static"
]
prep-wasm.desc = "builds the wasm artifacts and prepares them for the cli"
tinker.cmd = [
    "cd packages/tribble-app",
    "perseus tinker"
]
tinker.desc = "runs `perseus tinker` on the app"

build.cmd = [
    "bonnie tinker",
    "bonnie prep-wasm",
    "cd packages/tribble",
    # We allow extra arguments here so that we can cross-compile if necessary
    "cargo build --release %%"
]

ci.subcommands.prep.cmd = [
    "cargo install wasm-pack perseus-cli",
    "rustup target add wasm32-unknown-unknown",
    "cd packages/tribble-app",
    "perseus prep"
]
ci.subcommands.prep.desc = "prepares dependencies for CI (this doesn't prepare the Wasm artifacts)"
check.cmd = [
    "cargo check --all",
    "cargo fmt --all -- --check",
    "cargo clippy --all"
]
check.desc = "checks code for compile and formatting errors"
